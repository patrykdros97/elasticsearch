{
    "appid": "fde8b9da-d38c-45c2-832a-1e1c543ed287",
    "name": "Elasticsearch", 
    "description": "This app integrates with an Elasticsearch installation to implement investigative actions like 'run query'.", 
    "publisher": "Phantom", 
    "type": "siem", 
    "main_module": "elasticsearch_connector.pyc", 
    "app_version": "1.0.9",
    "utctime_updated": "2017-04-29T02:30:52.000000Z",
    "package_name": "phantom_elasticsearch",
    "product_name": "Elasticsearch", 
    "product_vendor": "Elastic", 
    "product_version_regex": ".*",
    "min_phantom_version": "1.2.236",
    "logo": "elastic.png",
    "license": "Copyright (c) Phantom Cyber Corporation 2016",
    "configuration": {
      "url": {
        "data_type": "string",
        "order": 0,
        "description": "Device URL including the port, e.g. https://myelastic.enterprise.com:9200",
        "required": true
      },
      "verify_server_cert": {
        "data_type": "boolean",
        "description": "Verify server certificate",
        "required": false,
        "order": 1,
        "default": false
      },
      "username": {
        "data_type": "string",
        "order": 2,
        "description": "Username",
        "required": false
      },
      "password": {
        "data_type": "password",
        "order": 3,
        "description": "Password",
        "required": false
      }
    },
    "actions": [
      {
        "action": "test connectivity",
        "description": "Validate the asset configuration for connectivity. This action logs into the device to check the connection and credentials.",
        "type": "test",
        "identifier": "test_asset_connectivity",
        "read_only": true,
        "parameters": {
        },
        "output": [],
        "versions":"EQ(*)"
      },
      {
        "action": "get config", 
        "description": "Returns the list of indices and types currently configured on the ElasticSearch instance",
        "type": "investigate", 
        "identifier": "get_config",
        "read_only": true, 
        "parameters": {}, 
        "render": {
          "type": "custom",
          "width": 10,
          "height": 5,
          "title": "Get Config",
          "view": "elasticsearch_view.display_config"
        },
        "output": [
          {
            "data_path": "action_result.data.*.index",
            "data_type": "string",
            "contains": ["elasticsearch index"]
          },
          {
            "data_path": "action_result.data.*.types",
            "data_type": "string",
            "contains": ["elasticsearch type"]
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.message",
            "data_type": "string"
          },
          {
            "data_path": "action_result.summary.total_indices",
            "data_type": "numeric"
          },
          {
            "data_path": "summary.total_objects",
            "data_type": "numeric"
          },
          {
            "data_path": "summary.total_objects_successful",
            "data_type": "numeric"
          }
        ],
        "versions": "EQ(*)"
      },
      {
        "action": "run query", 
        "description": "Run a search query on the Elasticsearch installation. Please escape any quotes that are part of the query string.",
        "verbose": "The action executes the query on an Elasticsearch installation by doing a POST on the REST endpoint '<b>base_url</b>/<b>index</b>/<b>type</b>/_search' with the input <b>query</b> as the data. Please see the Elasticseach website for query format and documentation.<br>The <b>routing</b> parameter is appended as a parameter in the REST call if specified.<br>As an e.g. the following query returns only the <i>id</i> and <i>name</i> of all the items in an <b>index</b> of the specified <b>type</b><br>{ \"query\": { \"match_all\": {} }, \"_source\": [\"id\", \"name\"]}", 
        "type": "investigate", 
        "identifier": "run_query",
        "read_only": true, 
        "parameters": {
          "index": {
            "description": "Index to query on", 
            "data_type": "string",
            "order": 0,
            "required": true,
            "contains": [ "elasticsearch index" ],
            "primary": true
          },
          "type": {
            "description": "Type to query on", 
            "data_type": "string",
            "order": 1,
            "required": true,
            "contains": [ "elasticsearch type" ],
            "primary": true
          },
          "routing": {
            "description": "Shards to query on (routing value)", 
            "data_type": "string",
            "order": 2,
            "required": false
          },
          "query": {
            "description": "Query to run (in ElasticSearch language)", 
            "data_type": "string",
            "order": 3,
            "required": true,
            "primary": true,
            "contains": [ "elasticsearch query" ]
          }
        }, 
        "render": {
          "type": "json",
          "width": 10,
          "height": 5,
          "view": "elasticsearch_view.display_query_results",
          "title": "Query Result"
        },
        "output": [
          {
            "data_path": "action_result.data.*.hits.hits.*._id",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.hits.hits.*._type",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.hits.hits.*._index",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.hits.hits.*._score",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.hits.hits.*._source",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.hits.hits.*.fields",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.hits.total",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.hits.max_score",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.took",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*._shards.total",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*._shards.failed",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*._shards.successful",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.timed_out",
            "data_type": "boolean"
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.message",
            "data_type": "string"
          },
          {
            "data_path": "action_result.summary.timed_out",
            "data_type": "boolean"
          },
          {
            "data_path": "action_result.summary.total_hits",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.parameter.type",
            "data_type": "string",
            "contains": [ "elasticsearch type" ]
          },
          {
            "data_path": "action_result.parameter.index",
            "data_type": "string",
            "contains": [ "elasticsearch index" ]
          },
          {
            "data_path": "action_result.parameter.query",
            "data_type": "string",
            "contains": [ "elasticsearch query" ]
          },
          {
            "data_path": "action_result.parameter.routing",
            "data_type": "string"
          },
          {
            "data_path": "summary.total_objects",
            "data_type": "numeric"
          },
          {
            "data_path": "summary.total_objects_successful",
            "data_type": "numeric"
          }
        ],
        "versions": "EQ(*)"
      }
    ]
}
